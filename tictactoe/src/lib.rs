//! WebAssembly bindings to the [`open_ttt_lib`] TicTacToe library
//!
//! This is a simple library to show how to run Rust code in the browser
//! via WebAssembly. All the computation logic is WASM-agnostic (except
//! the random number generator)
//!
//! ### Random numbers in WebAssembly
//! To use the [`rand`] crate from WebAssembly, we need to add the `wasm-bindgen`
//! feature, so that the underlying getrandom crate knows it can generate calls
//! into the browser's Javascript runtime

/// Utilities generated by [wasm-pack-template](https://github.com/rustwasm/wasm-pack-template)
mod utils;

/// The module where everything happens
pub mod game;

// When the `wee_alloc` feature is enabled, use `wee_alloc` as the global
// allocator.
#[cfg(feature = "wee_alloc")]
#[global_allocator]
static ALLOC: wee_alloc::WeeAlloc = wee_alloc::WeeAlloc::INIT;
